package com.comviva.mfs.repository.test;

import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.EntityManager;
import javax.persistence.Query;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.MockitoJUnitRunner;

import com.comviva.mfs.common.Constants;
import com.comviva.mfs.common.SupportApiConstants;
import com.comviva.mfs.repository.RolesCustomRepository;
import com.comviva.mfs.repository.SystemDataRepository;
import com.comviva.mfs.repository.repositoryimpl.RolesRepositoryImpl;

@RunWith(MockitoJUnitRunner.class)
public class RolesRepositoryTest {

	@Mock
    private EntityManager entityManager;
	
	@Mock
	private Query mockedQuery;
	
	@Mock
	private SystemDataRepository systemDataRepository;
	
	@InjectMocks
	private RolesCustomRepository rolesCustomRepository = new RolesRepositoryImpl();
	
	@Before
    public void init() {
        when(entityManager.createQuery(Mockito.anyString())).thenReturn(mockedQuery);
	}
	
	@Test
	public void loadRoleListByCategoryCodeTest() {
		when(mockedQuery.getResultList()).thenReturn(getResult());
		@SuppressWarnings("rawtypes")
		List<Map> listMap=rolesCustomRepository.loadRoleListByCategoryCode("COMVIVA");
		for(@SuppressWarnings("rawtypes") Map map:listMap) {
			assertThat(map.get(Constants.MODULE_CODE.getStrValue()), is(((Object[])getResult().get(0))[0]));
			assertThat(map.get(Constants.ROLE_NAME.getStrValue()), is(((Object[])getResult().get(0))[1]));
			assertThat(map.get(Constants.ROLE_CODE.getStrValue()), is(((Object[])getResult().get(0))[2]));
			assertThat(map.get(Constants.SERVICE_PAYMT_ID.getStrValue()), is(((Object[])getResult().get(0))[3]));
		}
	}
		
	private List<Object[]> getResult() {
		List<Object[]> list = new ArrayList<>();
		Object[] objArray = new Object[4];
		objArray[0] = "PARTY";
		objArray[1] = "Inverse C2C Transaction";
		objArray[2] = "SREJ_RPT";
		objArray[3] = "aaaa";
		list.add(objArray);
		return list;
		
	}
}
