package com.comviva.mfs.util;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.comviva.mfs.constant.test.CategoryTestConstants;
import com.comviva.mfs.constant.test.TestBaseConstants;
import com.comviva.mfs.entity.CategoryChecker;
import com.comviva.mfs.entity.CategoryMaker;
import com.comviva.mfs.entity.CategoryRelationsChecker;
import com.comviva.mfs.entity.CategoryRelationsMaker;
import com.comviva.mfs.model.category.AddCategoryApproveRequest;
import com.comviva.mfs.model.category.AddCategoryInitiateRequest;
import com.comviva.mfs.model.category.DeleteCategoryApproveRequest;
import com.comviva.mfs.model.category.DeleteCategoryInitiateRequest;
import com.comviva.mfs.model.category.UpdateCategoryApproveRequest;
import com.comviva.mfs.model.category.UpdateCategoryInitiateRequest;
import com.fasterxml.jackson.databind.ObjectMapper;

public class CategoryDataPreparationUtil {

	private static ObjectMapper objectMapper = new ObjectMapper();

	public static String addCategoryInitialRequest() {
		return CommonUtilTest.convertObjectToJson(getAddCategoryInitialRequest());
	}
	
	public static String addCategoryInitialCategoryCodeEmptyRequest() {
		AddCategoryInitiateRequest addInitiateCategory =  getAddCategoryInitialRequest();
		addInitiateCategory.setCategoryCode(null);
		return CommonUtilTest.convertObjectToJson(addInitiateCategory);
	}
	
	public static String addCategoryInitialCategoryCodeAlphaNumericRequest() {
		AddCategoryInitiateRequest addInitiateCategory =  getAddCategoryInitialRequest();
		addInitiateCategory.setCategoryCode("retailer??");
		return CommonUtilTest.convertObjectToJson(addInitiateCategory);
	}
	
	public static String addCategoryInitialCategoryNameEmptyRequest() {
		AddCategoryInitiateRequest addInitiateCategory =  getAddCategoryInitialRequest();
		addInitiateCategory.setCategoryName(null);
		return CommonUtilTest.convertObjectToJson(addInitiateCategory);
	}
	
	public static String addCategoryInitialCategoryNameAlphaNumericRequest() {
		AddCategoryInitiateRequest addInitiateCategory =  getAddCategoryInitialRequest();
		addInitiateCategory.setCategoryName("retailer??");
		return CommonUtilTest.convertObjectToJson(addInitiateCategory);
	}
	
	public static String addCategoryInitialNoApprovalRequest() {
		AddCategoryInitiateRequest addInitiateCategory =  getAddCategoryInitialRequest();
		addInitiateCategory.setIsApprovalRequired(null);
		return CommonUtilTest.convertObjectToJson(addInitiateCategory);
	}

	private static AddCategoryInitiateRequest getAddCategoryInitialRequest() {
			AddCategoryInitiateRequest addInitiateCategory = new AddCategoryInitiateRequest();
			addInitiateCategory.setBearerCode(TestBaseConstants.BEARER_CODE_VALUE.getValue());
			addInitiateCategory.setExternalRefId(CategoryTestConstants.EXTERNAL_REF_ID.getValue());
			addInitiateCategory.setIdentifierType(TestBaseConstants.IDENTIFIER_TYPE_VALUE.getValue());
			addInitiateCategory.setIdentifierValue(TestBaseConstants.IDENTIFIER_VALUE_CHANNELADMIN_VALUE.getValue());
			addInitiateCategory.setCategoryCode(CategoryTestConstants.CATEGORY_CODE.getValue());
			addInitiateCategory.setCategoryName(CategoryTestConstants.CATEGORY_NAME.getValue());
			addInitiateCategory.setDomainCode(CategoryTestConstants.DOMAIN_CODE.getValue());
			addInitiateCategory.setParentCategoryCode(CategoryTestConstants.PARENT_CATEGORY_CODE.getValue());
			addInitiateCategory.setCategoryType(CategoryTestConstants.CATEGORY_TYPE.getValue());
			addInitiateCategory.setGraphDomainType(CategoryTestConstants.GRAPH_DOMAIN_TYPE.getValue());
			addInitiateCategory.setIsApprovalRequired(CategoryTestConstants.IS_APPROVAL_REQUIRED.getValue());
			return addInitiateCategory;
	}
	
	public static String addCategoryApproveRequest() {
		return CommonUtilTest.convertObjectToJson(getAddCategoryApproveRequest());
	}
	
	private static AddCategoryApproveRequest getAddCategoryApproveRequest() {
		AddCategoryApproveRequest addApproveCategory = new AddCategoryApproveRequest();
		addApproveCategory.setBearerCode(TestBaseConstants.BEARER_CODE_VALUE.getValue());
		addApproveCategory.setExternalRefId(CategoryTestConstants.EXTERNAL_REF_ID.getValue());
		addApproveCategory.setIdentifierType(TestBaseConstants.IDENTIFIER_TYPE_VALUE.getValue());
		addApproveCategory.setIdentifierValue(TestBaseConstants.IDENTIFIER_VALUE_NETADMIN_VALUE.getValue());
		return addApproveCategory;
	}
	
	public static String updateCategoryInitialRequest() {
			return CommonUtilTest.convertObjectToJson(getUpdateCategoryInitialRequest());
	}
	
	public static String updateCategoryInitialCategoryNameEmptyRequest() {
		UpdateCategoryInitiateRequest request = getUpdateCategoryInitialRequest();
		request.setCategoryName(null);
		return CommonUtilTest.convertObjectToJson(getUpdateCategoryInitialRequest());
	}
	
	public static String updateCategoryInitialParentCategoryCodeEmptyRequest() {
		UpdateCategoryInitiateRequest request = getUpdateCategoryInitialRequest();
		request.setParentCategoryCode(null);
		return CommonUtilTest.convertObjectToJson(getUpdateCategoryInitialRequest());
	}
	
	public static String updateCategoryInitialNoApprovalRequest() {
		UpdateCategoryInitiateRequest updateInitiateCategory =  getUpdateCategoryInitialRequest();
		updateInitiateCategory.setIsApprovalRequired(null);
			return CommonUtilTest.convertObjectToJson(updateInitiateCategory);
	}
	
	private static UpdateCategoryInitiateRequest getUpdateCategoryInitialRequest() {
		UpdateCategoryInitiateRequest updateInitiateCategory = new UpdateCategoryInitiateRequest();
		updateInitiateCategory.setBearerCode(TestBaseConstants.BEARER_CODE_VALUE.getValue());
		updateInitiateCategory.setExternalRefId(CategoryTestConstants.EXTERNAL_REF_ID.getValue());
		updateInitiateCategory.setIdentifierType(TestBaseConstants.IDENTIFIER_TYPE_VALUE.getValue());
		updateInitiateCategory.setIdentifierValue(TestBaseConstants.IDENTIFIER_VALUE_CHANNELADMIN_VALUE.getValue());
		updateInitiateCategory.setCategoryName(CategoryTestConstants.CATEGORY_NAME.getValue());
		updateInitiateCategory.setParentCategoryCode(CategoryTestConstants.CATEGORY_CODE.getValue());
		updateInitiateCategory.setIsApprovalRequired(CategoryTestConstants.IS_APPROVAL_REQUIRED.getValue());
		return updateInitiateCategory;
	}
	
	public static String updateCategoryApproveRequest() {
		try {
			UpdateCategoryApproveRequest updateApproveCategory = new UpdateCategoryApproveRequest();
			updateApproveCategory.setBearerCode(TestBaseConstants.BEARER_CODE_VALUE.getValue());
			updateApproveCategory.setExternalRefId(CategoryTestConstants.EXTERNAL_REF_ID.getValue());
			updateApproveCategory.setIdentifierType(TestBaseConstants.IDENTIFIER_TYPE_VALUE.getValue());
			updateApproveCategory.setIdentifierValue(TestBaseConstants.IDENTIFIER_VALUE_NETADMIN_VALUE.getValue());
		return objectMapper.writeValueAsString(updateApproveCategory);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
	
	public static String deleteCategoryInitialRequest() {
			return CommonUtilTest.convertObjectToJson(getDeleteCategoryInitialRequest());
	}
	
	public static String deleteCategoryInitialNoApprovalRequest() {
		DeleteCategoryInitiateRequest deleteInitiateCategory =  getDeleteCategoryInitialRequest();
		deleteInitiateCategory.setIsApprovalRequired(null);
			return CommonUtilTest.convertObjectToJson(deleteInitiateCategory);
	}
	
	private static DeleteCategoryInitiateRequest getDeleteCategoryInitialRequest() {
		DeleteCategoryInitiateRequest deleteInitiateCategory = new DeleteCategoryInitiateRequest();
		deleteInitiateCategory.setBearerCode(TestBaseConstants.BEARER_CODE_VALUE.getValue());
		deleteInitiateCategory.setExternalRefId(CategoryTestConstants.EXTERNAL_REF_ID.getValue());
		deleteInitiateCategory.setIdentifierType(TestBaseConstants.IDENTIFIER_TYPE_VALUE.getValue());
		deleteInitiateCategory.setIdentifierValue(TestBaseConstants.IDENTIFIER_VALUE_CHANNELADMIN_VALUE.getValue());
		deleteInitiateCategory.setIsApprovalRequired(CategoryTestConstants.IS_APPROVAL_REQUIRED.getValue());
		return deleteInitiateCategory;
	}
	
	public static String deleteCategoryApproveRequest() {
		try {
			DeleteCategoryApproveRequest deleteApproveCategory = new DeleteCategoryApproveRequest();
			deleteApproveCategory.setBearerCode(TestBaseConstants.BEARER_CODE_VALUE.getValue());
			deleteApproveCategory.setExternalRefId(CategoryTestConstants.EXTERNAL_REF_ID.getValue());
			deleteApproveCategory.setIdentifierType(TestBaseConstants.IDENTIFIER_TYPE_VALUE.getValue());
			deleteApproveCategory.setIdentifierValue(TestBaseConstants.IDENTIFIER_VALUE_NETADMIN_VALUE.getValue());
		return objectMapper.writeValueAsString(deleteApproveCategory);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
	
	public static String getAllCategoriesUrl() {
		return getCategoriesBasicUrl(CategoryTestConstants.GET_CATEGORIES.getValue())+TestBaseConstants.AND_SYMBOL.getValue()
		+TestBaseConstants.INITIATESTATUS.getValue()+TestBaseConstants.EQUAL_SYMBOL.getValue()+TestBaseConstants.NO.getValue();
	}
	
	public static String addCategoriesInitiateUrl() {
		return TestBaseConstants.BASE_URL.getValue()+CategoryTestConstants.ADD_CATEGORIES.getValue();
	}
	
	public static String addCategoriesApprovalUrl() {
		return TestBaseConstants.BASE_URL.getValue()+CategoryTestConstants.ADD_CATEGORIES.getValue()
		+CategoryTestConstants.CATEGORY_CODE.getValue()+"/"+CategoryTestConstants.ACTION.getValue();
	}
	
	public static String addCategoriesApprovalCategoryCodeNullUrl() {
		return TestBaseConstants.BASE_URL.getValue()+CategoryTestConstants.ADD_CATEGORIES.getValue()
		+TestBaseConstants.NULL.getValue()+"/"+CategoryTestConstants.ACTION.getValue();
	}
	
	public static String addCategoriesApprovalActionNullUrl() {
		return TestBaseConstants.BASE_URL.getValue()+CategoryTestConstants.ADD_CATEGORIES.getValue()
		+CategoryTestConstants.CATEGORY_CODE.getValue()+"/"+TestBaseConstants.NULL.getValue();
	}
	
	public static String updateCategoriesInitiateUrl() {
		return TestBaseConstants.BASE_URL.getValue()+CategoryTestConstants.ADD_CATEGORIES.getValue()
		+CategoryTestConstants.CATEGORY_CODE.getValue();
	}
	
	public static String updateCategoriesInitiateCategoryCodeNullUrl() {
		return TestBaseConstants.BASE_URL.getValue()+CategoryTestConstants.ADD_CATEGORIES.getValue()
		+TestBaseConstants.NULL.getValue();
	}
	
	public static String updateCategoriesApprovalUrl() {
		return TestBaseConstants.BASE_URL.getValue()+CategoryTestConstants.ADD_CATEGORIES.getValue()
		+CategoryTestConstants.CATEGORY_CODE.getValue()+"/"+CategoryTestConstants.ACTION.getValue();
	}
	
	public static String updateCategoriesRejectUrl() {
		return TestBaseConstants.BASE_URL.getValue()+CategoryTestConstants.ADD_CATEGORIES.getValue()
		+CategoryTestConstants.CATEGORY_CODE.getValue()+"/"+CategoryTestConstants.ACTION_REJECT.getValue();
	}
	
	public static String updateCategoriesApprovalCategoryCodeNullUrl() {
		return TestBaseConstants.BASE_URL.getValue()+CategoryTestConstants.ADD_CATEGORIES.getValue()
		+TestBaseConstants.NULL.getValue()+"/"+CategoryTestConstants.ACTION.getValue();
	}
	
	public static String updateCategoriesApprovalActionNullUrl() {
		return TestBaseConstants.BASE_URL.getValue()+CategoryTestConstants.ADD_CATEGORIES.getValue()
		+CategoryTestConstants.CATEGORY_CODE.getValue()+"/"+TestBaseConstants.NULL.getValue();
	}
	
	public static String deleteCategoriesInitiateUrl() {
		return TestBaseConstants.BASE_URL.getValue()+CategoryTestConstants.ADD_CATEGORIES.getValue()
		+CategoryTestConstants.CATEGORY_CODE.getValue();
	}
	
	public static String deleteCategoriesInitiateCategoryCodeNullUrl() {
		return TestBaseConstants.BASE_URL.getValue()+CategoryTestConstants.ADD_CATEGORIES.getValue()
		+TestBaseConstants.NULL.getValue();
	}
	
	public static String deleteCategoriesApprovalUrl() {
		return TestBaseConstants.BASE_URL.getValue()+CategoryTestConstants.ADD_CATEGORIES.getValue()
		+CategoryTestConstants.CATEGORY_CODE.getValue()+"/"+CategoryTestConstants.ACTION.getValue();
	}
	
	public static String getSingleCategoriesUrl() {
		return getCategoriesBasicUrl(CategoryTestConstants.GET_SINGLE_CATEGORIE.getValue())+TestBaseConstants.AND_SYMBOL.getValue()
		+TestBaseConstants.INITIATESTATUS.getValue()+TestBaseConstants.EQUAL_SYMBOL.getValue()+TestBaseConstants.NO.getValue();
	}
	
	public static String getCategoriesByDomainCodeUrl() {
		return getCategoriesBasicUrl(CategoryTestConstants.GET_CATEGORIES_BY_DOMAINS.getValue()+CategoryTestConstants.DOMAIN_CODE.getValue());
	}
	
	public static String getCategoriesRelationByCategoryCodeUrl() {
		return getCategoriesBasicUrl(CategoryTestConstants.GET_CATEGORYRELATIONS.getValue()+CategoryTestConstants.CATEGORY_CODE.getValue());
	}
	
	private static String getCategoriesBasicUrl(String type) {
		StringBuilder sb=new StringBuilder();
		sb.append(TestBaseConstants.BASE_URL.getValue());
		sb.append(type);
		sb.append(TestBaseConstants.QUESTION_MARK_SYMBOL.getValue());
		sb.append(TestBaseConstants.IDENTIFIER_TYPE.getValue());
		sb.append(TestBaseConstants.EQUAL_SYMBOL.getValue());
		sb.append(TestBaseConstants.IDENTIFIER_TYPE_VALUE.getValue());
		sb.append(TestBaseConstants.AND_SYMBOL.getValue());
		sb.append(TestBaseConstants.IDENTIFIER_VALUE.getValue());
		sb.append(TestBaseConstants.EQUAL_SYMBOL.getValue());
		sb.append(TestBaseConstants.IDENTIFIER_VALUE_NETADMIN_VALUE.getValue());
		sb.append(TestBaseConstants.AND_SYMBOL.getValue());
		sb.append(TestBaseConstants.BEARER_CODE.getValue());
		sb.append(TestBaseConstants.EQUAL_SYMBOL.getValue());
		sb.append(TestBaseConstants.BEARER_CODE_VALUE.getValue());
		return sb.toString();
	}
	
	public static List<CategoryChecker> getCategories(){
		List<CategoryChecker> list = new ArrayList<CategoryChecker>();
		list.add(getCategoryChecker());
		return list;
	}
	
	public static CategoryMaker getCategoryMaker() {
		CategoryMaker categoryMaker = new CategoryMaker();
		categoryMaker.setCategoryCode(CategoryTestConstants.CATEGORY_CODE.getValue());
		categoryMaker.setCategoryName("wholesaler");
		categoryMaker.setDomainCode("DISTWS");
		return categoryMaker;
	}
	
	public static CategoryChecker getCategoryChecker() {
		CategoryChecker categoryChecker = new CategoryChecker();
		categoryChecker.setCategoryCode(CategoryTestConstants.CATEGORY_CODE.getValue());
		categoryChecker.setCategoryName("wholesaler");
		categoryChecker.setDomainCode("DISTWS");
		return categoryChecker;
	}
	
	public static List<CategoryChecker> getAllCategoryCheckers(){
		List<CategoryChecker> list = new ArrayList<>();
		list.add(getCategoryChecker());
		return list;
	}
	
	public static CategoryRelationsMaker getCategoryRelationMaker() {
		CategoryRelationsMaker categoryRelationMaker = new CategoryRelationsMaker();
		categoryRelationMaker.setId(1l);
		categoryRelationMaker.setFromCategory("SSA");
		categoryRelationMaker.setToCategory("RT");
		categoryRelationMaker.setRelationType("PARENT");
		categoryRelationMaker.setStatus("Y");
		categoryRelationMaker.setApplicationId("2");
		categoryRelationMaker.setCreatedOn(new Date());
		categoryRelationMaker.setCreatedBy("SN");
		return categoryRelationMaker;
	}
	
	
	public static CategoryRelationsChecker getCategoryRelationChecker() {
		CategoryRelationsChecker categoryRelationChecker = new CategoryRelationsChecker();
		categoryRelationChecker.setId(1l);
		categoryRelationChecker.setFromCategory("SSA");
		categoryRelationChecker.setToCategory("RT");
		categoryRelationChecker.setRelationType("PARENT");
		categoryRelationChecker.setStatus("Y");
		categoryRelationChecker.setApplicationId("2");
		categoryRelationChecker.setCreatedOn(new Date());
		categoryRelationChecker.setCreatedBy("SN");
		return categoryRelationChecker;
	}
	
	
}
